Traceback (most recent call last):
  File "D:\ProgramData\anaconda3\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "D:\ProgramData\anaconda3\Lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\ProgramData\anaconda3\Lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\ProgramData\anaconda3\Lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\ProgramData\anaconda3\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "D:\ProgramData\anaconda3\Lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "D:\ProgramData\anaconda3\Lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "D:\ProgramData\anaconda3\Lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Load an example dataset
tips = sns.load_dataset("tips") # seaborn 自带的数据集，国内导入网速慢可能出错，可以把数据集提前从 github 上下载到电脑里
print(tips)
type(tips)
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mgaierror[0m                                  Traceback (most recent call last)
File [1;32mD:\ProgramData\anaconda3\Lib\urllib\request.py:1348[0m, in [0;36mAbstractHTTPHandler.do_open[1;34m(self, http_class, req, **http_conn_args)[0m
[0;32m   1347[0m [38;5;28;01mtry[39;00m:
[1;32m-> 1348[0m     h[38;5;241m.[39mrequest(req[38;5;241m.[39mget_method(), req[38;5;241m.[39mselector, req[38;5;241m.[39mdata, headers,
[0;32m   1349[0m               encode_chunked[38;5;241m=[39mreq[38;5;241m.[39mhas_header([38;5;124m'[39m[38;5;124mTransfer-encoding[39m[38;5;124m'[39m))
[0;32m   1350[0m [38;5;28;01mexcept[39;00m [38;5;167;01mOSError[39;00m [38;5;28;01mas[39;00m err: [38;5;66;03m# timeout error[39;00m

File [1;32mD:\ProgramData\anaconda3\Lib\http\client.py:1286[0m, in [0;36mHTTPConnection.request[1;34m(self, method, url, body, headers, encode_chunked)[0m
[0;32m   1285[0m [38;5;250m[39m[38;5;124;03m"""Send a complete request to the server."""[39;00m
[1;32m-> 1286[0m [38;5;28mself[39m[38;5;241m.[39m_send_request(method, url, body, headers, encode_chunked)

File [1;32mD:\ProgramData\anaconda3\Lib\http\client.py:1332[0m, in [0;36mHTTPConnection._send_request[1;34m(self, method, url, body, headers, encode_chunked)[0m
[0;32m   1331[0m     body [38;5;241m=[39m _encode(body, [38;5;124m'[39m[38;5;124mbody[39m[38;5;124m'[39m)
[1;32m-> 1332[0m [38;5;28mself[39m[38;5;241m.[39mendheaders(body, encode_chunked[38;5;241m=[39mencode_chunked)

File [1;32mD:\ProgramData\anaconda3\Lib\http\client.py:1281[0m, in [0;36mHTTPConnection.endheaders[1;34m(self, message_body, encode_chunked)[0m
[0;32m   1280[0m     [38;5;28;01mraise[39;00m CannotSendHeader()
[1;32m-> 1281[0m [38;5;28mself[39m[38;5;241m.[39m_send_output(message_body, encode_chunked[38;5;241m=[39mencode_chunked)

File [1;32mD:\ProgramData\anaconda3\Lib\http\client.py:1041[0m, in [0;36mHTTPConnection._send_output[1;34m(self, message_body, encode_chunked)[0m
[0;32m   1040[0m [38;5;28;01mdel[39;00m [38;5;28mself[39m[38;5;241m.[39m_buffer[:]
[1;32m-> 1041[0m [38;5;28mself[39m[38;5;241m.[39msend(msg)
[0;32m   1043[0m [38;5;28;01mif[39;00m message_body [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m   1044[0m 
[0;32m   1045[0m     [38;5;66;03m# create a consistent interface to message_body[39;00m

File [1;32mD:\ProgramData\anaconda3\Lib\http\client.py:979[0m, in [0;36mHTTPConnection.send[1;34m(self, data)[0m
[0;32m    978[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mauto_open:
[1;32m--> 979[0m     [38;5;28mself[39m[38;5;241m.[39mconnect()
[0;32m    980[0m [38;5;28;01melse[39;00m:

File [1;32mD:\ProgramData\anaconda3\Lib\http\client.py:1451[0m, in [0;36mHTTPSConnection.connect[1;34m(self)[0m
[0;32m   1449[0m [38;5;124m"[39m[38;5;124mConnect to a host on a given (SSL) port.[39m[38;5;124m"[39m
[1;32m-> 1451[0m [38;5;28msuper[39m()[38;5;241m.[39mconnect()
[0;32m   1453[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_tunnel_host:

File [1;32mD:\ProgramData\anaconda3\Lib\http\client.py:945[0m, in [0;36mHTTPConnection.connect[1;34m(self)[0m
[0;32m    944[0m sys[38;5;241m.[39maudit([38;5;124m"[39m[38;5;124mhttp.client.connect[39m[38;5;124m"[39m, [38;5;28mself[39m, [38;5;28mself[39m[38;5;241m.[39mhost, [38;5;28mself[39m[38;5;241m.[39mport)
[1;32m--> 945[0m [38;5;28mself[39m[38;5;241m.[39msock [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_create_connection(
[0;32m    946[0m     ([38;5;28mself[39m[38;5;241m.[39mhost,[38;5;28mself[39m[38;5;241m.[39mport), [38;5;28mself[39m[38;5;241m.[39mtimeout, [38;5;28mself[39m[38;5;241m.[39msource_address)
[0;32m    947[0m [38;5;66;03m# Might fail in OSs that don't implement TCP_NODELAY[39;00m

File [1;32mD:\ProgramData\anaconda3\Lib\socket.py:827[0m, in [0;36mcreate_connection[1;34m(address, timeout, source_address, all_errors)[0m
[0;32m    826[0m exceptions [38;5;241m=[39m []
[1;32m--> 827[0m [38;5;28;01mfor[39;00m res [38;5;129;01min[39;00m getaddrinfo(host, port, [38;5;241m0[39m, SOCK_STREAM):
[0;32m    828[0m     af, socktype, proto, canonname, sa [38;5;241m=[39m res

File [1;32mD:\ProgramData\anaconda3\Lib\socket.py:962[0m, in [0;36mgetaddrinfo[1;34m(host, port, family, type, proto, flags)[0m
[0;32m    961[0m addrlist [38;5;241m=[39m []
[1;32m--> 962[0m [38;5;28;01mfor[39;00m res [38;5;129;01min[39;00m _socket[38;5;241m.[39mgetaddrinfo(host, port, family, [38;5;28mtype[39m, proto, flags):
[0;32m    963[0m     af, socktype, proto, canonname, sa [38;5;241m=[39m res

[1;31mgaierror[0m: [Errno 11004] getaddrinfo failed

During handling of the above exception, another exception occurred:

[1;31mURLError[0m                                  Traceback (most recent call last)
Cell [1;32mIn[17], line 2[0m
[0;32m      1[0m [38;5;66;03m# Load an example dataset[39;00m
[1;32m----> 2[0m tips [38;5;241m=[39m sns[38;5;241m.[39mload_dataset([38;5;124m"[39m[38;5;124mtips[39m[38;5;124m"[39m) [38;5;66;03m# seaborn 自带的数据集，国内导入网速慢可能出错，可以把数据集提前从 github 上下载到电脑里[39;00m
[0;32m      3[0m [38;5;28mprint[39m(tips)
[0;32m      4[0m [38;5;28mtype[39m(tips)

File [1;32mD:\ProgramData\anaconda3\Lib\site-packages\seaborn\utils.py:588[0m, in [0;36mload_dataset[1;34m(name, cache, data_home, **kws)[0m
[0;32m    586[0m         [38;5;28;01mif[39;00m name [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m get_dataset_names():
[0;32m    587[0m             [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124m'[39m[38;5;132;01m{[39;00mname[38;5;132;01m}[39;00m[38;5;124m'[39m[38;5;124m is not one of the example datasets.[39m[38;5;124m"[39m)
[1;32m--> 588[0m         urlretrieve(url, cache_path)
[0;32m    589[0m     full_path [38;5;241m=[39m cache_path
[0;32m    590[0m [38;5;28;01melse[39;00m:

File [1;32mD:\ProgramData\anaconda3\Lib\urllib\request.py:241[0m, in [0;36murlretrieve[1;34m(url, filename, reporthook, data)[0m
[0;32m    224[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[0;32m    225[0m [38;5;124;03mRetrieve a URL into a temporary location on disk.[39;00m
[0;32m    226[0m 
[1;32m   (...)[0m
[0;32m    237[0m [38;5;124;03mdata file as well as the resulting HTTPMessage object.[39;00m
[0;32m    238[0m [38;5;124;03m"""[39;00m
[0;32m    239[0m url_type, path [38;5;241m=[39m _splittype(url)
[1;32m--> 241[0m [38;5;28;01mwith[39;00m contextlib[38;5;241m.[39mclosing(urlopen(url, data)) [38;5;28;01mas[39;00m fp:
[0;32m    242[0m     headers [38;5;241m=[39m fp[38;5;241m.[39minfo()
[0;32m    244[0m     [38;5;66;03m# Just return the local path and the "headers" for file://[39;00m
[0;32m    245[0m     [38;5;66;03m# URLs. No sense in performing a copy unless requested.[39;00m

File [1;32mD:\ProgramData\anaconda3\Lib\urllib\request.py:216[0m, in [0;36murlopen[1;34m(url, data, timeout, cafile, capath, cadefault, context)[0m
[0;32m    214[0m [38;5;28;01melse[39;00m:
[0;32m    215[0m     opener [38;5;241m=[39m _opener
[1;32m--> 216[0m [38;5;28;01mreturn[39;00m opener[38;5;241m.[39mopen(url, data, timeout)

File [1;32mD:\ProgramData\anaconda3\Lib\urllib\request.py:519[0m, in [0;36mOpenerDirector.open[1;34m(self, fullurl, data, timeout)[0m
[0;32m    516[0m     req [38;5;241m=[39m meth(req)
[0;32m    518[0m sys[38;5;241m.[39maudit([38;5;124m'[39m[38;5;124murllib.Request[39m[38;5;124m'[39m, req[38;5;241m.[39mfull_url, req[38;5;241m.[39mdata, req[38;5;241m.[39mheaders, req[38;5;241m.[39mget_method())
[1;32m--> 519[0m response [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_open(req, data)
[0;32m    521[0m [38;5;66;03m# post-process response[39;00m
[0;32m    522[0m meth_name [38;5;241m=[39m protocol[38;5;241m+[39m[38;5;124m"[39m[38;5;124m_response[39m[38;5;124m"[39m

File [1;32mD:\ProgramData\anaconda3\Lib\urllib\request.py:536[0m, in [0;36mOpenerDirector._open[1;34m(self, req, data)[0m
[0;32m    533[0m     [38;5;28;01mreturn[39;00m result
[0;32m    535[0m protocol [38;5;241m=[39m req[38;5;241m.[39mtype
[1;32m--> 536[0m result [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_call_chain([38;5;28mself[39m[38;5;241m.[39mhandle_open, protocol, protocol [38;5;241m+[39m
[0;32m    537[0m                           [38;5;124m'[39m[38;5;124m_open[39m[38;5;124m'[39m, req)
[0;32m    538[0m [38;5;28;01mif[39;00m result:
[0;32m    539[0m     [38;5;28;01mreturn[39;00m result

File [1;32mD:\ProgramData\anaconda3\Lib\urllib\request.py:496[0m, in [0;36mOpenerDirector._call_chain[1;34m(self, chain, kind, meth_name, *args)[0m
[0;32m    494[0m [38;5;28;01mfor[39;00m handler [38;5;129;01min[39;00m handlers:
[0;32m    495[0m     func [38;5;241m=[39m [38;5;28mgetattr[39m(handler, meth_name)
[1;32m--> 496[0m     result [38;5;241m=[39m func([38;5;241m*[39margs)
[0;32m    497[0m     [38;5;28;01mif[39;00m result [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m    498[0m         [38;5;28;01mreturn[39;00m result

File [1;32mD:\ProgramData\anaconda3\Lib\urllib\request.py:1391[0m, in [0;36mHTTPSHandler.https_open[1;34m(self, req)[0m
[0;32m   1390[0m [38;5;28;01mdef[39;00m [38;5;21mhttps_open[39m([38;5;28mself[39m, req):
[1;32m-> 1391[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mdo_open(http[38;5;241m.[39mclient[38;5;241m.[39mHTTPSConnection, req,
[0;32m   1392[0m         context[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_context, check_hostname[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_check_hostname)

File [1;32mD:\ProgramData\anaconda3\Lib\urllib\request.py:1351[0m, in [0;36mAbstractHTTPHandler.do_open[1;34m(self, http_class, req, **http_conn_args)[0m
[0;32m   1348[0m         h[38;5;241m.[39mrequest(req[38;5;241m.[39mget_method(), req[38;5;241m.[39mselector, req[38;5;241m.[39mdata, headers,
[0;32m   1349[0m                   encode_chunked[38;5;241m=[39mreq[38;5;241m.[39mhas_header([38;5;124m'[39m[38;5;124mTransfer-encoding[39m[38;5;124m'[39m))
[0;32m   1350[0m     [38;5;28;01mexcept[39;00m [38;5;167;01mOSError[39;00m [38;5;28;01mas[39;00m err: [38;5;66;03m# timeout error[39;00m
[1;32m-> 1351[0m         [38;5;28;01mraise[39;00m URLError(err)
[0;32m   1352[0m     r [38;5;241m=[39m h[38;5;241m.[39mgetresponse()
[0;32m   1353[0m [38;5;28;01mexcept[39;00m:

[1;31mURLError[0m: <urlopen error [Errno 11004] getaddrinfo failed>
URLError: <urlopen error [Errno 11004] getaddrinfo failed>

